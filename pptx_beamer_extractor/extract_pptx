#!/bin/bash

# Exit immediately if a command exits with a non-zero status.
set -e

# Check for input file
if [ -z "$1" ]; then
    echo "Usage: ./extract_pptx <filename.pptx>"
    exit 1
fi

INPUT_FILE=$(realpath "$1")
BASENAME=$(basename "$INPUT_FILE" .pptx)
OUTPUT_DIR="$BASENAME"
TEX_FILE="$OUTPUT_DIR/presentation.tex"
PDF_FILE="$OUTPUT_DIR/$BASENAME.pdf"

echo "Starting conversion for $INPUT_FILE..."

# 1. Convert to LaTeX using the Python script
echo "Running Python script to extract content..."
SCRIPT_DIR=$(dirname "$(realpath "$0")")
# Assumes the conda environment is activated as per README
python3 "$SCRIPT_DIR/pptx_to_beamer.py" "$INPUT_FILE" "$OUTPUT_DIR"

# Check if the .tex file was created
if [ ! -f "$TEX_FILE" ]; then
    echo "Error: LaTeX file was not generated by the Python script."
    exit 1
fi

# 2. Compile the LaTeX file
echo "Compiling the LaTeX file..."
pdflatex -synctex=1 -interaction=nonstopmode -output-directory="$OUTPUT_DIR" "$TEX_FILE" > /dev/null
# A second pass is often needed for references, table of contents, etc.
pdflatex -synctex=1 -interaction=nonstopmode -output-directory="$OUTPUT_DIR" "$TEX_FILE" > /dev/null

echo "Renaming output PDF..."
mv "$OUTPUT_DIR/presentation.pdf" "$PDF_FILE"

# 3. Clean up intermediate files
echo "Cleaning up auxiliary files..."
rm -f "$OUTPUT_DIR"/*.aux \
      "$OUTPUT_DIR"/*.log \
      "$OUTPUT_DIR"/*.nav \
      "$OUTPUT_DIR"/*.out \
      "$OUTPUT_DIR"/*.snm \
      "$OUTPUT_DIR"/*.toc \
      "$OUTPUT_DIR"/*.synctex.gz \
      "$OUTPUT_DIR"/*.vrb

echo "----------------------------------------"
echo "Conversion complete!"
echo "Final PDF is available at: $PDF_FILE"
echo "----------------------------------------"
